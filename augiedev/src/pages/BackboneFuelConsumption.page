<apex:page docType="html-5.0" standardStylesheets="false" showHeader="false" sidebar="false">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
	<title>Fuel Consumptions in Backbone.js</title>

	<!-- === -->
	<!-- CSS -->
	<!-- === -->
	<link href="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/css/jquery.mobile-1.3.0.min.css')}" rel="stylesheet" />

	<!-- ========= -->
	<!-- Libraries -->
	<!-- ========= -->
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/jquery-1.9.1.min.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/lodash.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/backbone.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/forcetk.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/backbone.force.js')}" type="text/javascript"></script>
	<script>
		$( document ).on( "mobileinit",
			// Set up the "mobileinit" handler before including jQuery Mobile
			function() {
				$.mobile.ajaxEnabled = false;
				$.mobile.linkBindingEnabled = false;
				// $.mobile.hashListeningEnabled = false;
				// $.mobile.pushStateEnabled = false;
				// $.mobile.changePage.defaults.changeHash = false;
			}
		)
	</script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/jquery.mobile-1.3.0.js')}" type="text/javascript"></script>
</head>
<body>

	<!-- ========= -->
	<!-- HTML CODE -->
	<!-- ========= -->

	<div id="fuelConsumptions" data-role="page">
		<div data-role="header">
			<h1>Fuel Consumptions</h1>
		</div><!-- /header -->
		<div id="fuelConsumptions-content" data-role="content">
		</div>	
	</div>
	
	<div id="fuelConsumption" data-role="page" data-title="FuelConsumption">
		<div data-role="header">
			<a href='#' id="back" class='ui-btn-left' data-icon='arrow-l'>Back</a>
			<h1 id="fuelConsumptionH1Header">Fuel Consumption</h1>
		</div><!-- /header -->
		<div id="fuelConsumption-content" data-role="content">
		</div>
	</div>

	<!-- ========= -->
	<!-- Templates -->
	<!-- ========= -->
	<script type="text/template" id="fuelConsumptions-template">
		<form>
			<button data-role="button" class="new">New Fuel Consumption</button>
		</form>
		<ul data-role="listview" data-inset="true" id="fuelConsumption-list">
		</ul>
		<div data-role="footer">
			<div data-role="fieldcontain">
				<label for="select-theme" class="select">UI Theme:</label>
				<select class="theme-selector" name="select-theme" id="select-theme">
					<option value="default">default</option>
					<option value="a">a</option>
					<option value="b">b</option>
					<option value="c">c</option>
					<option value="d">d</option>
					<option value="e">e</option>
				</select>
			</div>
		</div>
	</script>

	<script type="text/template" id="fuelConsumption-template">
		<% if (typeof(Id) !== 'undefined') { %>
			<a href="#<%= Id %>"><%- Name %></a>
		<% } else { %>
			<%- Name %>
		<% } %>
	</script>

	<script id="fuelConsumption-detail-template" type="text/template">

		<div data-role="header"><%- Name %></div>

		<form name="fuelConsumptionform" id="fuelConsumptionform">
			<% if (typeof(Id) !== 'undefined') { %>
				<input type="hidden" name="Id" id="Id" value="<%- Id %>" />
			<% } %>

			<div data-role="fieldcontain">
				<label for="Consumption_Date__c">Fuel Consumption Date:</label> <input name="Consumption_Date__c" id="Consumption_Date__c" value="<%- Consumption_Date__c %>" readonly="true" /><br/>
				<label for="Kilometres_Driven__c">Kilometres Driven:</label> <input name="Kilometres_Driven__c" id="Kilometres_Driven__c" value="<%- Kilometres_Driven__c %>" readonly="true" /><br/>
				<label for="Litres_Tanked__c">Litres Tanked:</label> <input name="Litres_Tanked__c" id="Litres_Tanked__c" value="<%- Litres_Tanked__c %>" readonly="true" /><br/>
				<label for="Kilometres_per_Litre__c">Kilometres per Litre:</label> <input name="Kilometres_per_Litre__c" id="Kilometres_per_Litre__c" value="<%- Kilometres_per_Litre__c %>" readonly="true" /><br/>
			</div>
			<button data-role="button" data-icon="check" data-inline="true" data-theme="b" class="edit">Edit</button>
		</form>
	</script>
	
	<script id="fuelConsumption-edit-template" type="text/template">

		<div data-role="header">EDIT <%- Name %></div>

		<form name="fuelConsumptionEditform" id="fuelConsumptionEditform">
			<% if (typeof(Id) !== 'undefined') { %>
				<input type="hidden" name="Id" id="Id" value="<%- Id %>" />
			<% } %>

			<div data-role="fieldcontain">
				<label for="Consumption_Date__c">Fuel Consumption Date:</label> <input name="Consumption_Date__c" id="Consumption_Date__c" value="<%- Consumption_Date__c %>" /><br/>
				<label for="Kilometres_Driven__c">Kilometres Driven:</label> <input name="Kilometres_Driven__c" id="Kilometres_Driven__c" value="<%- Kilometres_Driven__c %>" /><br/>
				<label for="Litres_Tanked__c">Litres Tanked:</label> <input name="Litres_Tanked__c" id="Litres_Tanked__c" value="<%- Litres_Tanked__c %>" /><br/>
			</div>

			<button data-role="button" data-icon="check" data-inline="true" data-theme="b" class="save">Save</button>
		</form>
	</script>	

	<script type="text/javascript">
		$(document).ready(function() {
			myapp();
		});

		function myapp() {

			// Get an instance of the REST API client and set the session ID
			var client = new forcetk.Client();
			client.setSessionToken('{!$Api.Session_ID}');

			Backbone.Force.initialize(client);

			var app = {}; // create namespace for our app

			<!-- ====== -->
			<!-- Models -->
			<!-- ====== -->
			app.FuelConsumption = Backbone.Force.Model.extend({
				type: 'Fuel_Consumption__c',
				fields: ['Id', 'Name', 'Consumption_Date__c', 'Kilometres_Driven__c', 'Kilometres_per_Litre__c', 'Litres_Tanked__c']
			});
	
			<!-- =========== -->
			<!-- Collections -->
			<!-- =========== -->
			app.FuelConsumptionsCollection = Backbone.Force.Collection.extend({
				model: app.FuelConsumption,
				query: "WHERE IsDeleted = false ORDER BY Name DESC" // Use a more selective filter in real life!
			});

			<!-- ===== -->
			<!-- Views -->
			<!-- ===== -->
			// renders the details of a specific Fuel Consumption record on the screen
			app.FuelConsumptionDetailView = Backbone.View.extend({
				template: _.template($('#fuelConsumption-detail-template').html()),
				render: function(){
					this.$el.html(this.template(this.model.toJSON()));
					return this; // enable chained calls
				},
				events: {
					'click .edit' : 'edit',
				},
				edit: function(){
					app.router.navigate('/edit#' + this.model.toJSON().Id, {trigger: true});
					return false;
				},				
				initialize: function(){
					this.model.on('destroy', this.remove, this);
					this.render();
				}
			});
			
			// renders the details of a specific Fuel Consumption record on the screen
			app.FuelConsumptionEditView = Backbone.View.extend({
				template: _.template($('#fuelConsumption-edit-template').html()),
				render: function(){
					this.$el.html(this.template(this.model.toJSON()));
					return this; // enable chained calls
				},
				events: {
					'change' : 'change',
					'click .save' : 'save',
				},
				// The change function handles the updating of the values in the model
				change: function (event) {
					// Apply the change to the model
					var target = event.target;
					var change = {};
					change[target.name] = target.value;
					this.model.set(change);
				},				
				save : function(){
					this.model.save(null, {
						success: function(model) {
							app.router.navigate('fuelConsumptions', {trigger: true});
						},
						error: function () {
							alert('Error saving');
						}
					});
					return false;
				},				
				initialize: function(){
					this.render();
				}
			});

			// renders individual Fuel Consumption list item (li)
			app.FuelConsumptionView = Backbone.View.extend({
				tagName: 'li',
				template: _.template($('#fuelConsumption-template').html()),
				render: function(){
					this.$el.html(this.template(this.model.toJSON()));
					return this; // enable chained calls
				},
				initialize: function(){
				}
			});

			// renders the full list of Fuel Consumptions calling FuelConsumptionView for each one.
			app.FuelConsumptionsView = Backbone.View.extend({
				template : _.template($('#fuelConsumptions-template').html()),
				initialize : function() {
					this.render();
					this.input = this.$('#new-fuelConsumption');
					this.model.on('add', this.render, this);
					this.model.on('reset', this.render, this);
				},
				events : {
					'click .new' : 'newFuelConsumption',
					'change .theme-selector' : 'changeTheme'
				},
				createFuelConsumptionOnEnter : function(e){
					if ( e.which !== 13 || !this.input.val().trim() ) { // ENTER_KEY = 13
						 return;
					}
					// Wait for the server response so we have the Id with which to render the new Fuel Consumption
					this.model.create(this.newAttributes(), {wait: true});
					this.input.val(''); // clean input box
				},
				renderOne : function(fuelConsumption){
					var view = new app.FuelConsumptionView({model : fuelConsumption});
					this.$('#fuelConsumption-list').append(view.render().el);
				},
				render : function(){
					this.$el.html(this.template());
					this.$('#fuelConsumption-list').empty();
					for (var i = 0, l = this.model.models.length; i < l; i++) {
						 this.renderOne(this.model.models[i]);
					}
				},
				newAttributes: function(){
					return {
						 Name: this.input.val().trim()
					}
				},
				changeTheme: function(event){
					event.preventDefault();
					var theme = $(event.target).children("option").filter(":selected").text();
					changeTheme(theme);
				},
				newFuelConsumption: function(){
					app.router.navigate('/new', true);
					return false;
				}
			});
			
			<!-- ======= -->
			<!-- Routers -->
			<!-- ======= -->
			//Define the Application Router
			app.Router = Backbone.Router.extend({ 
				routes: {
				"" : "fuelConsumptions",
				"fuelConsumptions" : "fuelConsumptions",
				"edit:id" : "editFuelConsumption",
				"new" : "newFuelConsumption",
				":id" : "fuelConsumption"
				},		
				fuelConsumptions : function() {
					var fuelConsumptionsCollection = new app.FuelConsumptionsCollection();
					$.mobile.loading( "show", { text: 'Loading Fuel Consumptions', textVisible: true } );
					fuelConsumptionsCollection.fetch({success: function(){
						$.mobile.loading( "hide" );
						$("#fuelConsumptions-content").html(new app.FuelConsumptionsView({model: fuelConsumptionsCollection}).el);
						// Let jQuery Mobile do its stuff
						$("#fuelConsumptions-content").trigger( 'create' );
						$.mobile.changePage( "#fuelConsumptions" , { reverse: false, changeHash: false } );
					}});
				},
				fuelConsumption : function(id) {
					var fuelConsumption = new app.FuelConsumption({Id: id});
					$.mobile.loading( "show", { text: 'Loading Fuel Consumption Record', textVisible: true } );
					fuelConsumption.fetch({success: function(){
						$.mobile.loading( "hide" );
						$("#fuelConsumption-content").html(new app.FuelConsumptionDetailView({model: fuelConsumption}).el);
						$("#fuelConsumption-content").trigger( 'create' );
						$.mobile.changePage( "#fuelConsumption" , { reverse: false, changeHash: false } );
					}});
				},
				editFuelConsumption : function(id) {
					var fuelConsumption = new app.FuelConsumption({Id: id.substr(-18)});
					$.mobile.loading( "show", { text: 'EDIT Loading Fuel Consumption Record', textVisible: true } );
					fuelConsumption.fetch({success: function(){
						$.mobile.loading( "hide" );
						$("#fuelConsumption-content").html(new app.FuelConsumptionEditView({model: fuelConsumption}).el);
						$("#fuelConsumption-content").trigger( 'create' );
						$.mobile.changePage( "#fuelConsumption" , { reverse: false, changeHash: false } );
					}});
				},
				newFuelConsumption : function(id) {
					var fuelConsumption = new app.FuelConsumption();
					$("#fuelConsumption-content").empty();
					$("#fuelConsumption-content").html(new app.FuelConsumptionEditView({model: fuelConsumption}).el);
					$("#fuelConsumption-content").trigger( 'create' );
					$.mobile.changePage( "#fuelConsumption" , { reverse: false, changeHash: false } );
				}
			});

			app.router = new app.Router();
			Backbone.history.start();

		// end of function myapp
		}
	</script>
</body>
</apex:page>