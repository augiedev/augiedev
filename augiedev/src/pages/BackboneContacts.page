<apex:page docType="html-5.0" standardStylesheets="false" showHeader="false" sidebar="false">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
	<title>Contacts in Backbone.js</title>

	<!-- === -->
	<!-- CSS -->
	<!-- === -->
	<link href="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/css/jquery.mobile-1.3.0.min.css')}" rel="stylesheet" />

	<!-- ========= -->
	<!-- Libraries -->
	<!-- ========= -->
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/jquery-1.9.1.min.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/lodash.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/backbone.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/forcetk.js')}" type="text/javascript"></script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/backbone.force.js')}" type="text/javascript"></script>
	<script>
			$( document ).on( "mobileinit",
				// Set up the "mobileinit" handler before including jQuery Mobile
				function() {
						$.mobile.ajaxEnabled = false;
						$.mobile.linkBindingEnabled = false;
						// $.mobile.hashListeningEnabled = false;
						// $.mobile.pushStateEnabled = false;
						// $.mobile.changePage.defaults.changeHash = false;
				}
			)
	</script>
	<script src="{!URLFOR($Resource.MobileSample_Resources_Backbone, 'resources/lib/jquery.mobile-1.3.0.js')}" type="text/javascript"></script>
</head>
<body>

	<!-- ========= -->
	<!-- HTML CODE -->
	<!-- ========= -->
	<div data-role="content" id="contacts-content"></div>

	<!-- ========= -->
	<!-- Templates -->
	<!-- ========= -->
	<script type="text/template" id="contacts-template">
		<form>
			<button data-role="button" class="new">New Contact</button>
		</form>
		<ul data-role="listview" data-inset="true" id="contact-list">
		</ul>
		<div data-role="footer">
			<div data-role="fieldcontain">
				<label for="select-theme" class="select">UI Theme:</label>
				<select class="theme-selector" name="select-theme" id="select-theme">
					<option value="default">default</option>
					<option value="a">a</option>
					<option value="b">b</option>
					<option value="c">c</option>
					<option value="d">d</option>
					<option value="e">e</option>
				</select>
			</div>
		</div>
	</script>
						
	<script type="text/template" id="contact-template">
		<% if (typeof(Id) !== 'undefined') { %>
			<a href="#<%= Id %>"><%- Name %> (<%- Email %>)</a>
		<% } else { %>
			<%- Name %>
		<% } %>
	</script>

	<script type="text/template" id="contact-detail-template">
		<form name="contactform" id="contactform">
			<% if (typeof(Id) !== 'undefined') { %>
				<input type="hidden" name="Id" id="Id" value="<%- Id %>" />
			<% } %>
			<div data-role="fieldcontain">
				<label for="Name">First Name:</label>
				<% if (typeof(FirstName) !== 'undefined') { %>
					<input name="FirstName" id="FirstName" value="<%- FirstName %>" />
				<% } else { %>
					<input name="FirstName" id="FirstName" />
				<% } %>
			</div>
			<div data-role="fieldcontain">
				<label for="Name">Last Name:</label>
				<% if (typeof(LastName) !== 'undefined') { %>
					<input name="LastName" id="LastName" value="<%- LastName %>" />
				<% } else { %>
					<input name="LastName" id="LastName" />
				<% } %>
			</div>
			<div data-role="fieldcontain">
				<label for="Email">Email:</label>
				<% if (typeof(Email) !== 'undefined') { %>
					<input name="Email" id="Email" value="<%- Email %>" />
				<% } else { %>
					<input name="Email" id="Email" />
				<% } %>
			</div>
			<button data-role="button" data-icon="check" data-inline="true" data-theme="b" class="save">Save</button>
			<% if (typeof(Id) !== 'undefined') { %>
				<button data-role="button" data-icon="delete" data-inline="true" class="destroy">Delete</button>
			<% } %>
		</form>
	</script>

	<script type="text/javascript">
		$(document).ready(function() {
			myapp();
		});

		function myapp() {

			// Get an instance of the REST API client and set the session ID
			var client = new forcetk.Client();
			client.setSessionToken('{!$Api.Session_ID}');

			Backbone.Force.initialize(client);

			var app = {}; // create namespace for our app

			<!-- ====== -->
			<!-- Models -->
			<!-- ====== -->
			app.Contact = Backbone.Force.Model.extend({
					type: 'Contact',
					fields: ['Id', 'Name', 'Email', 'FirstName', 'LastName']
			});
	
			<!-- =========== -->
			<!-- Collections -->
			<!-- =========== -->
			app.ContactsCollection = Backbone.Force.Collection.extend({
					model: app.Contact,
					query: "WHERE IsDeleted = false LIMIT 2" // Use a more selective filter in real life!
			});

			<!-- ===== -->
			<!-- Views -->
			<!-- ===== -->
			// renders individual Contact list item (li)
			app.ContactView = Backbone.View.extend({
				tagName: 'li',
				template: _.template($('#contact-template').html()),
				render: function(){
					this.$el.html(this.template(this.model.toJSON()));
					return this; // enable chained calls
				},
				initialize: function(){
				}
			});

			// renders the full list of Contacts calling ContactView for each one.
			app.ContactsView = Backbone.View.extend({
					template : _.template($('#contacts-template').html()),
					initialize : function() {
						this.render();
						this.input = this.$('#new-contact');
						this.model.on('add', this.render, this);
						this.model.on('reset', this.render, this);
					},
					events : {
						'click .new' : 'newContact',
						'change .theme-selector' : 'changeTheme'
					},
					createContactOnEnter : function(e){
						if ( e.which !== 13 || !this.input.val().trim() ) { // ENTER_KEY = 13
							 return;
						}
						// Wait for the server response so we have the Id with which to render the new Contact
						this.model.create(this.newAttributes(), {wait: true});
						this.input.val(''); // clean input box
					},
					renderOne : function(contact){
						var view = new app.ContactView({model : contact});
						this.$('#contact-list').append(view.render().el);
					},
					render : function(){
						this.$el.html(this.template());
						this.$('#contact-list').empty();
						for (var i = 0, l = this.model.models.length; i < l; i++) {
							 this.renderOne(this.model.models[i]);
						}
					},
					newAttributes: function(){
						return {
							 Name: this.input.val().trim()
						}
					},
					changeTheme: function(event){
						event.preventDefault();
						var theme = $(event.target).children("option").filter(":selected").text();
						changeTheme(theme);
					},
					newContact: function(){
						app.router.navigate('/new', true);
						return false;
					}
			});
			
			<!-- ======= -->
			<!-- Routers -->
			<!-- ======= -->
			//Define the Application Router
			app.Router = Backbone.Router.extend({ 
				routes: {
				"": "contacts",
				"contacts":"contacts",
				"new": "newContact",
				":id": "contact"
				},		
				contacts: function() {
					var contactsCollection = new app.ContactsCollection();
					$.mobile.loading( "show", { text: 'Loading Contacts', textVisible: true } );
					contactsCollection.fetch({success: function(){
						$.mobile.loading( "hide" );
						$("#contacts-content").html(new app.ContactsView({model: contactsCollection}).el);
						// Let jQuery Mobile do its stuff
						$("#contacts-content").trigger( 'create' );
						$.mobile.changePage( "#contacts" , { reverse: false, changeHash: false } );
					}});
				},
				contact: function(id) {
					var contact = new app.Contact({Id: id});
					$.mobile.loading( "show", { text: 'Loading Contact', textVisible: true } );
					contact.fetch({success: function(){
						$.mobile.loading( "hide" );
						$("#contact-content").html(new app.ContactDetailView({model: contact}).el);
						$("#contact-content").trigger( 'create' );
						$.mobile.changePage( "#contact" , { reverse: false, changeHash: false } );
					}});
				},
				newContact: function(id) {
					var contact = new app.Contact();
					$("#contact-content").empty();
					$("#contact-content").html(new app.ContactDetailView({model: contact}).el);
					$("#contact-content").trigger( 'create' );
					$.mobile.changePage( "#contact" , { reverse: false, changeHash: false } );
				}
			});

			app.router = new app.Router();
			Backbone.history.start();

		// end of function myapp
		}
	</script>
</body>
</apex:page>